-
  var cats = [
    'All', 'Design' , 'Code' , 'Video' , 'Music', 'Writing', 'Crypto', 'Finance',
    'Gaming', 'Chatbots', 'Speech', 'Translation', 'Productivity', 'HR', 'Healthcare',
    'Security', 'Robotics', 'Energy', 'Education', 'Marketing', 'Travel', 'Retail' 
  ]

section.container 
  .hero
    .hero__text
      p.hero-update ðŸ”¥ 16 new AI tools added last week
      .hero__heading
        h1.hero__title The Ultimative Collection <br> of 1510+ AI-Tools
      button.button-group__btn.btn.btn--primary(type="button" data-modal="subscribe") Subscribe to newsletter
      p.hero__desc Discover the best AI-tools for your needs with our carefully curated catalog of the latest and most powerful artificial intelligence software.
    form.hero__search.search(action="" x-data="{state: false}") 
      input(type="text" class="search__input" placeholder="Search, try â€˜Designâ€™ / â€˜Videoâ€™ / â€˜SEOâ€™ etc.")
      fieldset.hero__categories.categories.custom-select-wrapper
        button.categories__btn.hidden-desktop.btn.btn--primary(data-select="categories" type="button") Choose category
          svg(width="8px" height="8px")
            use(xlink:href="sprite.svg#arrow-right-cat_sprite") 
        .categories__mobile.categories-mobile.hidden-desktop.modal(data-select-el="categories" aria-hidden="true" x-data="{checkedCount: 0}")
          .categories-mobile__heading
            h2.categories-mobile__title Categories
            button.categories-mobile__close.js-close-select(aria-label="close categories list" type="button")
              svg(width="20" height="20")
                use(xlink:href="sprite.svg#close_sprite") 
          .categories__list
            each val, index in cats 
              label.categories__label(x-show="!state")
                input(type="checkbox" class="visually-hidden categories__checkbox" x-on:change="checkedCount = document.querySelectorAll('.categories__checkbox:checked').length")
                span.categories__item 
                  span.categories__icon 
                    img(src=require(`@/images/categories/${index + 1}.svg`), alt="")
                  span.categories__name= val
              a.categories__label(href="" x-show="state" x-cloak)
                span.categories__item 
                  span.categories__icon 
                    img(src=require(`@/images/categories/${index + 1}.svg`), alt="")
                  span.categories__name= val
          .categories__action(x-show="checkedCount > 0" x-transition) 
            button.btn.btn--secondary(type="button" x-on:click="document.querySelectorAll('.categories__checkbox:checked').forEach((t) => t.checked = false); checkedCount = 0") Reset
              span(x-text="'(' + checkedCount + ')'")
            button.btn.btn--primary(type="button" class="js-close-select") Apply
        .hero-toggle.hero__toggle
          span.hero-toggle__text(x-bind:class="state ? '' : 'hero-toggle__text--active' ") Filters 
          button.hero-toggle__button(type="button" x-on:click="state = !state" x-bind:class="state ? 'hero-toggle__button--active' : '' ")
            span 
          span.hero-toggle__text(x-bind:class="state ? 'hero-toggle__text--active' : '' ") Pages
        .categories__list.hidden-mobile
          each val, index in cats 
            label.categories__label(x-show="!state")
              input(type="checkbox" class="visually-hidden categories__checkbox")
              span.categories__item 
                span.categories__icon 
                  img(src=require(`@/images/categories/${index + 1}.svg`), alt="")
                span.categories__name= val
            a.categories__label(href="" x-show="state" x-cloak )
              span.categories__item 
                span.categories__icon 
                  img(src=require(`@/images/categories/${index + 1}.svg`), alt="")
                span.categories__name= val

